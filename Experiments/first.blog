type Ball; 
type Draw;
type Color;

random Color Color(Ball b) ~ Categorical({Orange -> 0.3, Red -> 0.5, Green -> 0.2});

random Ball BallDrawn(Draw d) ~ UniformChoice({b for Ball b});

random Color ObsColor(Draw d) ~
  if (BallDrawn(d) != null) then 
    case Color(BallDrawn(d)) in 
    { 
    	Orange -> Categorical({Orange -> 0.8, Green -> 0.2}),
    	Red -> Categorical({Red -> 0.9, Green -> 0.1}),
    	Green -> Categorical({Green -> 1})
	};



distinct Color Orange, Red, Green;
distinct Draw Draw1, Draw2, Draw3, Draw4;

#Ball ~ UniformInt(1,6);


obs ObsColor(Draw1) = Orange;
obs ObsColor(Draw2) = Orange;
obs ObsColor(Draw3) = Red;
obs ObsColor(Draw4) = Green;

//query (BallDrawn(Draw2) == BallDrawn(Draw3)); 
query size({b for Ball b});
